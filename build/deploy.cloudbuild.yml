steps:
  - name: "gcr.io/cloud-builders/docker"
    id: 'pull cache'
    entrypoint: "bash"
    args:
      - -c
      - docker pull ${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-api:compose || exit 0

  - name: "gcr.io/cloud-builders/docker"
    id: 'pull firebase cache'
    entrypoint: "bash"
    args:
      - -c
      - docker pull ${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-firebase-emulator:compose || exit 0

  - name: "gcr.io/cloud-builders/docker"
    id: "docker build"
    waitFor: ['pull cache']
    args:
      [
        "build",
        "--cache-from", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-api:compose",
        "-t", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-api:compose",
        "-t", "gffft-api",
        "--file", "./functions/Dockerfile",
        "./functions",
      ]

  - name: "gcr.io/cloud-builders/docker"
    id: "docker push"
    waitFor: ['docker build']
    args: ["push", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-api:compose"]

  - name: "gcr.io/cloud-builders/docker"
    id: "docker build firebase"
    waitFor: ['pull firebase cache']
    args:
      [
        "build",
        "--cache-from", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-firebase-emulator:compose",
        "-t", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-firebase-emulator:compose",
        "-t", "gffft-firebase-emulator",
        "--file", "./firebase-emulator/Dockerfile",
        "./",
      ]

  - name: "gcr.io/cloud-builders/docker"
    id: "docker push firebase"
    waitFor: ['docker build firebase']
    args: ["push", "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-firebase-emulator:compose"]

  - name: 'docker/compose:1.29.2'
    id: 'check build'
    args: [ 'run','api','npm','run','build' ]
    env: [ 'COMPOSE_HTTP_TIMEOUT=200' ]

  - name: 'docker/compose:1.29.2'
    id: "tests in docker-compose"
    args: [
      '-f', 'docker-compose.yml',
      '-f', 'docker-compose.test.yml',
      '-f', 'docker-compose.cb.yml',
      'up',
      '--exit-code-from', 'api-integration-test',
      'api-integration-test'
    ]
    env: [ 'COMPOSE_HTTP_TIMEOUT=400' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'sonar scan'
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker run \
        --rm \
        -e SONAR_HOST_URL="https://sonarcloud.io" \
        -e SONAR_LOGIN="$$SONAR_TOKEN" \
        -v "/$(pwd)/functions:/usr/src" \
        sonarsource/sonar-scanner-cli \
        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
    secretEnv: ['SONAR_TOKEN']

  # Check linting
  - name: 'docker/compose:1.27.4'
    id: 'lint check'
    args: [ 'run','api','npm','run','lint' ]
    env: [ 'COMPOSE_HTTP_TIMEOUT=200' ]

  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    dir: 'functions'

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    dir: 'functions'

  #  - name: 'gcr.io/cloud-builders/npm'
  #    args: ['test']
  #    dir: 'functions'

  - name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy"]
    timeout: "1600s"
    dir: 'functions'

timeout: 2400s

images:
  - "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-api:compose"
  - "${_ARTIFACT_REPO}/$PROJECT_ID/gffft/gffft-firebase-emulator:compose"
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/sonarsource-token/versions/1
      env: 'SONAR_TOKEN'
substitutions:
  _ARTIFACT_REPO: us-central1-docker.pkg.dev

